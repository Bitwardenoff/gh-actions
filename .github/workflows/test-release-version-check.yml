---

name: Test Version Check Action

on:
  pull_request:
    path:
      - "release-check-version"
  push:
    branches:
      - "master"
  workflow_dispatch:
    inputs: {}


jobs:
  test-version-check:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: ts-semver-success
            project-type: ts
            file: release-version-check/tests/fixtures/SemVer/package.json
            override-version: 1.1.0
          - name: ts-semver-fail
            project-type: ts
            file: release-version-check/tests/fixtures/SemVer/package.json
            override-version: 1.0.1
          - name: ts-calver-success
            project-type: ts
            file: release-version-check/tests/fixtures/CalVer/package.json
            override-version: 2022.06.0
          - name: ts-calver-fail
            project-type: ts
            file: release-version-check/tests/fixtures/CalVer/package.json
            override-version: 2022.05.0
          - name: csharp-calver-success
            project-type: csharp
            file: release-version-check/tests/fixtures/CalVer/Test.csproj
            override-version: 2022.06.0
          - name: csharp-calver-fail
            project-type: csharp
            file: release-version-check/tests/fixtures/CalVer/Test.csproj
            override-version: 2022.05.0
    outputs:
      ts-semver-succuess-status: ${{ steps.set-status.outputs.ts-semver-success }}
      #ts-semver-fail-status: ${{ steps.set-status.outputs.ts-semver-fail }}
      ts-calver-succuess-status: ${{ steps.set-status.outputs.ts-calver-success }}
      #ts-calver-fail-status: ${{ steps.set-status.outputs.ts-calver-fail }}
      csharp-calver-succuess-status: ${{ steps.set-status.outputs.csharp-calver-success }}
      #csharp-calver-fail-status: ${{ steps.set-status.outputs.csharp-calver-fail }}
    steps:
      - uses: actions/checkout@v2

      - name: Version Check - ${{ matrix.name }}
        id: run-version-check
        continue-on-error: true
        uses: ./release-version-check
        with:
          release-type: Initial Release
          project-type: ${{ matrix.project-type }}
          file: ${{ matrix.file }}
          override-version: ${{ matrix.override-version }}

      - name: Set Status
        id: set-status
        run: |
          echo "Status Status - ${{ matrix.name }}: ${{ stesp.run-version-check.outputs.status }}"
          echo "::set-output name=${{ matrix.name }}::${{ steps.run-version-check.outputs.status }}"


  run-version-check-test:
    runs-on: ubuntu-latest
    needs: [test-version-check]
    if: always()
    steps:
      - name: Validate Outputs
        run: |
          echo "Test TS SemVer Success: ${{ needs.test-version-check.outputs.ts-semver-success-status }}"
          echo "Test TS SemVer Fail: ${{ needs.test-version-check.outputs.ts-semver-fail-status }}"
          echo "Test TS CalVer Success: ${{ needs.test-version-check.outputs.ts-calver-success-status }}"
          echo "Test TS CalVer Fail: ${{ needs.test-version-check.outputs.ts-calver-fail-status }}"
          echo "Test CSharp CalVer Success: ${{ needs.test-version-check.outputs.csharp-calver-success-status }}"
          echo "Test CSharp CalVer Fail: ${{ needs.test-version-check.outputs.csharp-calver-fail-status }}"

          exit 0

  
