---
name: Workflow Linter

on:
  pull_request:
    paths:
      - .github/workflows/**
  workflow_call:

jobs:
  lint:
    name: "Workflow Linter"
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Branch
        uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247 # v2.3.4
        with:
          fetch-depth: 0

      - name: Get changed workflows
        id: changed-workflows
        run: |
          MODIFIED_WORKFLOWS=$(git diff --name-only origin/${{ github.base_ref	}} | grep -E '.github/workflows/.*.(yml|yaml)' | tr '\n' ' ')
          MODIFIED_EXISTING_WORKFLOWS=""
          for workflow in $MODIFIED_WORKFLOWS; do
              if [ -f $workflow ]; then
                  MODIFIED_EXISTING_WORKFLOWS+=" ${workflow}"
              fi
          done
          echo "modified-workflows=$MODIFIED_EXISTING_WORKFLOWS" >> $GITHUB_OUTPUT

      - name: Workflow Lint
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: bitwarden/gh-actions/lint-workflow@5be17376a0acaa806073819b272a7ab1fcaa85a1
        with:
          workflows: ${{ steps.changed-workflows.outputs.modified-workflows }}

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@b109d83a62e94cf7c522bf6c15cb25c175850b16 # v35.7.12
        with:
          files: .github/workflows/**
      
      - name: Check for pinned versions
        if: steps.changed-files.outputs.any_changed == 'true'
        shell: bash
        env:
          FILE: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          FILES=$(echo "${{ env.FILE }}")
          MISSING_VERSION_FILES=""
          # Changed files input and trim with new line
          FILES_TO_CHANGE=$(tr ' ' '\n' <<< "$FILES")

          # Read each changed filenames from the input
          while IFS= read -r line; do
            # Grep for lines with 'uses' and not having version tag
            VERSION_PATTERN=$(cat "${line}" | grep 'uses: ' | grep -vE '#\s+v[0-9.]+(\s|$)')

            # Check if $VERSION_PATTERN is not empty
            if [[ ! -z "$VERSION_PATTERN" ]]; then
              # Read each line that does not have version tag
              while IFS= read -r each_line; do
                # if the line does contain bitwarden/gh-actions
                if ! grep -qE 'bitwarden/gh-actions/*' <<< $each_line ; then
                  # Add that filename to the variable storing files with missing actions version
                  MISSING_VERSION_FILES+=" ${line} "
                fi
              done <<< "$VERSION_PATTERN"
            fi
          done <<< "$FILES_TO_CHANGE"

          # Trim the variable to be a single line
          MISSING_FILES=$(echo $MISSING_VERSION_FILES | tr '\n' ' ')
          # Check if the variable is not empty
          if [ -n "$MISSING_VERSION_FILES" ]; then
            echo "### :mega: Workflow files ${MISSING_FILES} are missing actions version tag" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

